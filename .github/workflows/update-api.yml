name: Create release
on:
  push:
    branches:
      - master
    paths:
      - 'varpivo/api/**'
      - '.github/workflows/update-api.yml' 

jobs:
  build:
    name: Generate OpenAPI schema and create release
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache-requirements
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-no-sensors.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements
        if: steps.cache-requirements.outputs.cache-hit != 'true'
        run: pip install -r requirements-no-sensors.txt
      - name: Generate OpenAPI schema file
        run: python main.py -o
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ GITHUB_RUN_NUMBER }}
          release_name: API update release ${{ GITHUB_RUN_NUMBER }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./out/openapi.json
          asset_name: openapi.json
          asset_content_type: application/json
